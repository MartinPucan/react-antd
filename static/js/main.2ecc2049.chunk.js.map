{"version":3,"sources":["components/User.js","App.js","reportWebVitals.js","index.js"],"names":["User","useState","users","setUsers","fetchUsers","a","fetch","response","json","data","console","log","useEffect","columns","title","dataIndex","key","render","url","size","src","record","type","onClick","id","filter","user","rowKey","dataSource","pagination","pageSize","bordered","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"kSAOe,SAASA,IAAQ,IAAD,EACFC,mBAAS,IADP,mBACtBC,EADsB,KACfC,EADe,OAEEF,oBAAS,GAFX,mBAIxBG,GAJwB,UAId,uCAAG,8BAAAC,EAAA,+EAEMC,MAAM,sCAFZ,cAEXC,EAFW,gBAGEA,EAASC,OAHX,OAGXA,EAHW,OAIjBL,EAASK,EAAKC,MAJG,kDAOjBC,QAAQC,IAAR,MAPiB,0DAAH,sDAWhBC,qBAAU,WACTR,MACE,IAEH,IAIMS,EAAU,CAChB,CACCC,MAAO,KACPC,UAAW,KACXC,IAAK,MACH,CACFF,MAAO,SACPC,UAAW,SACXE,OAAQ,SAAAC,GAAG,OAAI,cAAC,IAAD,CAAQC,KAAK,QAAQC,IAAKF,MACvC,CACFJ,MAAO,QACPC,UAAW,SACT,CACFD,MAAO,aACPC,UAAW,cACT,CACFD,MAAO,YACPC,UAAW,aACT,CACFD,MAAO,UACPG,OAAQ,SAACI,GAAD,OACP,iCACC,cAAC,IAAD,CAAQF,KAAK,QAAb,kBACA,cAAC,IAAD,CAASG,KAAK,aACd,cAAC,IAAD,CAAQA,KAAK,SAASH,KAAK,QAAQI,QAAS,kBA5B5BC,EA4B6CH,EAAOG,QA3BtErB,EAASD,EAAMuB,QAAO,SAAAC,GAAI,OAAIF,IAAOE,EAAKF,OADxB,IAAAA,GA4BhB,0BAOH,OACC,cAAC,IAAD,CACCX,QAASA,EACTc,OAAO,KACPC,WAAY1B,EACZY,MAAO,iBAAM,SACbe,WAAY,CAAEC,SAAU,IACxBC,UAAQ,I,aCjDIC,G,OAZH,WAEX,OACC,cAAC,IAAD,UACC,qBAAKC,UAAU,YAAf,SACC,cAACjC,EAAD,UCAWkC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAAS1B,OACP,cAAC,IAAM2B,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.2ecc2049.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport Table from 'antd/es/table';\nimport Avatar from 'antd/es/avatar';\nimport Divider from 'antd/es/divider';\nimport Button from 'antd/es/button';\nimport 'antd/dist/antd.css';\n\nexport default function User() {\n\tconst [ users, setUsers ] = useState([]);\n\tconst [ editing, setEditing ] = useState(false);\n\n\tconst fetchUsers = async () => {\n\t\ttry {\n\t\t\tconst response = await fetch(`https://reqres.in/api/users?page=2`);\n\t\t\tconst json = await response.json();\n\t\t\tsetUsers(json.data);\n\t\t}\n\t\tcatch(error) {\n\t\t\tconsole.log(error)\n\t\t}\n\t}\n\n\tuseEffect(() => {\n\t\tfetchUsers()\n\t}, [])\n\n\tconst deleteUser = id => {\n\t\tsetUsers(users.filter(user => id !== user.id));\n\t}\n\n\tconst columns = [\n\t{\n\t\ttitle: 'ID',\n\t\tdataIndex: 'id',\n\t\tkey: 'id'\n\t}, {\n\t\ttitle: 'Avatar',\n\t\tdataIndex: 'avatar',\n\t\trender: url => <Avatar size=\"small\" src={url} />,\n\t}, {\n\t\ttitle: 'Email',\n\t\tdataIndex: 'email',\n\t}, {\n\t\ttitle: 'First name',\n\t\tdataIndex: 'first_name',\n\t}, {\n\t\ttitle: 'Last name',\n\t\tdataIndex: 'last_name',\n\t}, {\n\t\ttitle: 'Actions',\n\t\trender: (record) => (\n\t\t\t<span>\n\t\t\t\t<Button size=\"small\">Edit</Button>\n\t\t\t\t<Divider type=\"vertical\" />\n\t\t\t\t<Button type=\"danger\" size=\"small\" onClick={() => deleteUser(record.id)}>\n\t\t\t\t\tDelete\n\t\t\t\t</Button>\n    \t</span>\n\t\t)\n\t}];\n\n\treturn (\n\t\t<Table\n\t\t\tcolumns={columns}\n\t\t\trowKey=\"id\"\n\t\t\tdataSource={users}\n\t\t\ttitle={() => 'Users'}\n\t\t\tpagination={{ pageSize: 10 }}\n\t\t\tbordered\n\t\t/>\n\t);\n};\n","import React from 'react';\nimport User from './components/User';\nimport Layout from 'antd/es/layout';\nimport 'antd/dist/antd.css';\nimport './App.css';\n// import LoginUser from \"./components/LoginUser\";\n\nconst App = () => {\n\n\treturn (\n\t\t<Layout>\n\t\t\t<div className=\"container\">\n\t\t\t\t<User />\n\t\t\t\t{/*<LoginUser />*/}\n\t\t\t</div>\n\t\t</Layout>\n\t);\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}