{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","users","setUsers","useEffect","axios","get","then","response","data","catch","error","console","log","columns","title","dataIndex","render","url","size","src","key","text","record","href","name","type","className","dataSource","pagination","pageSize","rowKey","bordered","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"4RAkEeA,EA1DH,WAAO,IAAD,EAEWC,mBAAS,IAFpB,mBAETC,EAFS,KAEFC,EAFE,KAKjBC,qBAAU,WACTC,IAAMC,IAHQ,sCAIZC,MAAM,SAAAC,GACNL,EAASK,EAASC,KAAKA,SAEvBC,OAAM,SAAAC,GACNC,QAAQC,IAAIF,QAEZ,IAGH,IAAMG,EAAU,CAAC,CAChBC,MAAO,SACPC,UAAW,SACXC,OAAQ,SAAAC,GAAG,OAAI,cAAC,IAAD,CAAQC,KAAK,QAAQC,IAAKF,MACvC,CACFH,MAAO,QACPC,UAAW,SACT,CACFD,MAAO,aACPC,UAAW,cACT,CACFD,MAAO,YACPC,UAAW,aACT,CACFD,MAAO,SACPM,IAAK,SACLJ,OAAQ,SAACK,EAAMC,GAAP,OACP,iCACG,oBAAGC,KAAK,IAAR,2BAAsBD,EAAOE,QAC7B,cAAC,IAAD,CAASC,KAAK,aACd,mBAAGF,KAAK,IAAR,oBACA,cAAC,IAAD,CAASE,KAAK,mBAQnB,OAHAd,QAAQC,IAAIX,GAIX,qBAAKyB,UAAU,YAAf,SACC,cAAC,IAAD,CACCb,QAASA,EACTc,WAAY1B,EACZa,MAAO,iBAAM,SACbc,WAAY,CAAEC,SAAU,GACxBC,OAAO,KACPC,UAAQ,OCjDGC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB5B,MAAK,YAAkD,IAA/C6B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASxB,OACP,cAAC,IAAMyB,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BX,M","file":"static/js/main.fbe2928d.chunk.js","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport Table from 'antd/es/table';\nimport Avatar from 'antd/es/avatar';\nimport Divider from 'antd/es/divider';\nimport 'antd/dist/antd.css';\nimport './App.css';\nimport axios from 'axios';\n\nconst App = () => {\n\n\tconst [ users, setUsers ] = useState([]);\n\tconst apiURL = 'https://reqres.in/api/users?page=2';\n\n\tuseEffect(() => {\n\t\taxios.get(apiURL)\n\t\t\t.then( response => {\n\t\t\t\tsetUsers(response.data.data);\n\t\t\t})\n\t\t\t.catch(error => {\n\t\t\t\tconsole.log(error);\n\t\t\t})\n\t}, [])\n\n\n\tconst columns = [{\n\t\ttitle: 'Avatar',\n\t\tdataIndex: 'avatar',\n\t\trender: url => <Avatar size=\"small\" src={url} />,\n\t}, {\n\t\ttitle: 'Email',\n\t\tdataIndex: 'email',\n\t}, {\n\t\ttitle: 'First name',\n\t\tdataIndex: 'first_name',\n\t}, {\n\t\ttitle: 'Last name',\n\t\tdataIndex: 'last_name',\n\t}, {\n\t\ttitle: 'Action',\n\t\tkey: 'action',\n\t\trender: (text, record) => (\n\t\t\t<span>\n      <a href=\"#\">Action ä¸€ {record.name}</a>\n      <Divider type=\"vertical\" />\n      <a href=\"#\">Delete</a>\n      <Divider type=\"vertical\" />\n    </span>\n\t\t),\n\t}];\n\n\tconsole.log(users);\n\n\n\treturn (\n\t\t<div className=\"container\">\n\t\t\t<Table\n\t\t\t\tcolumns={columns}\n\t\t\t\tdataSource={users}\n\t\t\t\ttitle={() => 'Users'}\n\t\t\t\tpagination={{ pageSize: 4 }}\n\t\t\t\trowKey=\"id\"\n\t\t\t\tbordered />\n\t\t</div>\n\t);\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}